server:
  port: 80
  servlet:
    session:
      cookie:
        name: GATEWAY-CLIENT

spring:
  application:
    name: gateway-client
  profiles:
    active: '@environment@'
#route forwarding
  cloud:
    gateway:
      routes:
        - id: user
          uri: lb://user-management-client
          predicates:
            - Path=/user/**
          filters:
            - TokenRelay
            - StripPrefix=1
#        - id: photo
#          uri: lb://photo-sharing-client
#          predicates:
#            - Path=/photo/**
#          filters:
#            - TokenRelay
#            - StripPrefix=1
  session:
    redis:
      flush-mode: on_save # session refresh mode
      namespace: gateway:session # namespace for keys used to store sessions
  security:
    oauth2:
      client:
        registration:
          messaging_gateway_oidc:
            provider: messaging_gateway_oidc
            clientId: gateway_client
            clientSecret: gateway_client_secret
            scope:
              - openid
              - profile
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          messaging_gateway_oidc:
            issuer-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MESSAGING_GATEWAY_OIDC_ISSUERURI}
            userInfoUri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MESSAGING_GATEWAY_OIDC_USERINFOURI}
            tokenUri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MESSAGING_GATEWAY_OIDC_TOKENURI}
            authorizationUri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MESSAGING_GATEWAY_OIDC_AUTHORIZATIONURI}
            jwkSetUri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MESSAGING_GATEWAY_OIDC_JWKSETURI}

