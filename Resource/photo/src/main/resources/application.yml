server:
  port: 10002
  shutdown: graceful

spring:
  profiles:
    active: local
  application:
    name: photo

management:
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true
info:
  app:
    name: photo
    description: photo server component
    version: 0.0.1-SNAPSHOT

resilience4j:
  ratelimiter:
    configs:
      default:
        registerHealthIndicator: true
        limitForPeriod: 1
        limitRefreshPeriod: 5000
        timeoutDuration: 5s
#        eventConsumerBufferSize: 100
    instances:
      defaultRateLimiter:
        limitForPeriod: 1
        limitRefreshPeriod: 5000ms
        timeoutDuration: 3s

  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 100
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        ignoreExceptions:
    instances:
      retryForUserApp:
        baseConfig: default

  circuitbreaker:
    instances:
      # this should be correspond to the specific service which is invoked by this service
      detailsForUserApp:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 2
        waitDurationInOpenState: 50s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10


logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

