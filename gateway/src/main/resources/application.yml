server:
  port: 80
  servlet:
    session:
      cookie:
        name: GATEWAY

spring:
  application:
    name: gateway
  profiles:
    active: '@environment@'
#route forwarding
  cloud:
    gateway:
      routes:
        - id: user
          uri: lb://usermodule
          predicates:
            - Path=/user/**
          filters:
            - TokenRelay
            - StripPrefix=1
#        - id: photo
#          uri: lb://photo-sharing-client
#          predicates:
#            - Path=/photo/**
#          filters:
#            - TokenRelay
#            - StripPrefix=1
  session:
    redis:
      flush-mode: on_save # session refresh mode
      namespace: gateway:session # namespace for keys used to store sessions
  security:
    oauth2:
      client:
        registration:
          messaging_gateway_oidc:
            provider: messaging_gateway_oidc
            clientId: gateway_client
            clientSecret: gateway_client_secret
            scope:
              - openid
              - profile
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          messaging_gateway_oidc:
            issuer-uri: http://auth-server:9000
            userInfoUri: http://auth-server:9000/userinfo
            tokenUri: http://auth-server:9000/oauth2/token
            authorizationUri: http://auth-server:9000/oauth2/authorize
            jwkSetUri: http://auth-server:9000/oauth2/jwks

management:
  endpoints:
    web:
      exposure:
        include: "*"